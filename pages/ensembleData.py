import streamlit as st

st.title("Ensemble model")
st.write("This is an ensemble model consist of 3 models")
st.write("KNN, SVM and Decision tree")
st.write("For prediction, this model use hard voting")
st.write("")
st.write("I train each model individually and dump them into a .sav file")
st.write("After that, I combile all of them into one model(Ensemble model) and also dump it into a .sav file")
st.write("")
st.write("")

####################################
####################################
###### explan feature dataset
st.title("Dataset")
st.write("I use the dataset from kaggle")
st.write("Dataset's source: https://www.kaggle.com/datasets/kevinarvai/clinvar-conflicting")
st.write("")
st.write("This dataset has 65188 rows and 46 columns and contain NaN/null values")
st.write("to clean the data I drop all the columns that contain NaN/null values and are not important columns") 
st.write("after that I got 65188 rows and 5 to 11 columns depends on the model(not count the target column)")
st.write("")
st.write("but some columns contain string values so I encode them into numerical values with LabelEncoder")
st.write("and scale the data using StandardScaler as a way to increase model's training performance")
st.write("After that I dump the LabelEncoder and scaler into a .pkl file to use on website")
st.write("If the data isn't encoded in the same way as it was in the training process,")
st.write("the results might be different, leading to prediction errors.")
st.write("")
st.write("")
st.write("For more detail about the dataset cleaning")
st.write("I use scaler for 'POS', 'AF_ESP', 'AF_EXAC', 'AF_TGP' columns")
st.write("and LabelEncoder for 'CHROM', 'REF', 'ALT', 'CLNVC', 'ORIGIN', 'Allele', 'IMPACT'")
st.write("")
st.write("")
st.title("Feature expantion")
st.write("Class(the target column)")
st.write("It is a binary representation of whether or not a variant has conflicting classifications,")
st.write("where 0 represents consistent classifications and 1 represents conflicting classifications. ")
st.write("")
st.write("CHROM")
st.write("The chromosome number where the variant is located. It can be a number(e.g., 1, 2, 3) ")
st.write("or a special chromosome such as X or Y.")
st.write("")
st.write("POS")
st.write("The exact position on the chromosome where the variant is located, based on genomic coordinates.")
st.write("")
st.write("REF")
st.write("The reference allele, which represents the normal base sequence at that position in the genome.")
st.write("")
st.write("ALT")
st.write("The alternate allele, representing the changed base sequence compared to the reference allele (REF).")
st.write("")
st.write("AF_ESP")
st.write("Allele frequency from the GO-ESP (NHLBI Exome Sequencing Project), which studies genetic variation.")
st.write("")
st.write("AF_EXAC")
st.write("Allele frequency from the ExAC (Exome Aggregation Consortium) database, which aggregates data from global populations.")
st.write("")
st.write("AF_TGP")
st.write(" Allele frequency from the 1000 Genomes Project, which collects genetic variation data from diverse populations.")
st.write("")
st.write("CLNVC")
st.write("The variant's type.")
st.write("")
st.write("ORIGIN")
st.write("The origin of the variant.")
st.write("")
st.write("Allele")
st.write("the variant allele used to calculate the consequence")
st.write("")
st.write("IMPACT")
st.write("represents the impact modifier for the consequence type of a genetic variant.")
st.write("It indicates how much a given variant is expected to affect gene function or protein structure.")
st.write("Common categories include High, Moderate, Low, or Modifier, depending on the predicted severity.")
st.write("")




####################################
####################################

st.title("1.KNN")
st.write("k=15")
st.write("")

st.title("2.SVM")
st.write("kernel='poly', degree=3, C=2.005")
st.write("")

st.title("3.decision tree")
st.write("max_depth=15, min_samples_split=10, criterion=entropy")


